<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Antoine Falaize</title><link>https://afalaize.github.io/</link><description>This website depicts the research of A. Falaize the modelisation, the simulation and the correction of multiphysical systems.</description><atom:link href="https://afalaize.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Fri, 02 Feb 2018 21:27:06 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>PyPHS Seminar</title><link>https://afalaize.github.io/posts/pyphs-seminar/</link><dc:creator>Antoine Falaize</dc:creator><description>&lt;div&gt;&lt;p&gt;Below is the video recording of a seminar I gave on December 2017 in which I present the concepts underlying the &lt;a class="reference external" href="https://pyphs.github.io/pyphs/"&gt;PyPHS Library&lt;/a&gt;.
The talk is in french and the &lt;a class="reference external" href="https://afalaize.github.io/pdfs/171204_Seminaire_PyPHS.pdf"&gt;￼slides&lt;/a&gt; are in English.&lt;/p&gt;
&lt;iframe width="480" height="360" src="http://medias.ircam.fr/embed/media/x152ab3" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;</description><category>PHS</category><category>PyPHS</category><category>Seminar</category><guid>https://afalaize.github.io/posts/pyphs-seminar/</guid><pubDate>Mon, 04 Dec 2017 14:05:00 GMT</pubDate></item><item><title>PyPHS Tutorial</title><link>https://afalaize.github.io/posts/pyphs-tutorial/</link><dc:creator>Antoine Falaize</dc:creator><description>&lt;div&gt;&lt;p&gt;Below is the video recording of a &lt;em&gt;hands on&lt;/em&gt; tutorial on &lt;a class="reference external" href="https://pyphs.github.io/pyphs/"&gt;PyPHS library&lt;/a&gt; I gave on December 2017.
The talk is in french and the &lt;a class="reference external" href="https://afalaize.github.io/zips/PyPHS_TUTO_IRCAM.zip"&gt;material&lt;/a&gt; (slides and Python scripts) are in English.&lt;/p&gt;
&lt;iframe width="480" height="360" src="http://medias.ircam.fr/embed/media/x4d31af" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;</description><category>PHS</category><category>PyPHS</category><category>Tutorial</category><guid>https://afalaize.github.io/posts/pyphs-tutorial/</guid><pubDate>Mon, 04 Dec 2017 14:00:00 GMT</pubDate></item><item><title>Analyse de SHP pour la génération de lois de commande par platitude différentielle</title><link>https://afalaize.github.io/posts/jtcvam2/</link><dc:creator>Antoine Falaize</dc:creator><description>&lt;div&gt;&lt;p&gt;Below are the slides for the presentation I gave during the 2nd edition of the &lt;a class="reference external" href="http://www.gipsa-lab.fr/colloque/JTCVAM2017/accueil.html"&gt;Journées Techniques de Contrôle en Vibrations, Acoustique et Musique (JTCVAM)&lt;/a&gt; (in french):&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://afalaize.github.io/pdfs/JTCVAM2_Falaize_Platitude_HP.pdf"&gt;Analyse de Systèmes Hamiltoniens à Ports pour la génération de lois de commande par platitude différentielle: application en électroacoustique&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Control</category><category>Differential Flatness</category><category>Loudspeaker</category><category>PHS</category><guid>https://afalaize.github.io/posts/jtcvam2/</guid><pubDate>Fri, 01 Dec 2017 08:00:00 GMT</pubDate></item><item><title>Introductions to GIT and PyPI</title><link>https://afalaize.github.io/posts/introgitpypi/</link><dc:creator>Antoine Falaize</dc:creator><description>&lt;div&gt;&lt;p&gt;Below are two presentations given at LaSIE - UMR 7356, Université de La Rochelle on Nov. 23rd 2017 by Muzzamil Luqman and Antoine Falaize (both research-engineer at Université de La Rochelle):&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://afalaize.github.io/pdfs/SeminaireGit-nov2017-LaSIE.pdf"&gt;Version Control with GIT: an introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://afalaize.github.io/pdfs/Packaging_Python_Code_an_introduction.pdf"&gt;￼Packaging Python Code: an introduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;</description><category>Computer Tools</category><category>GIT</category><category>Seminar</category><guid>https://afalaize.github.io/posts/introgitpypi/</guid><pubDate>Thu, 23 Nov 2017 21:14:32 GMT</pubDate></item><item><title>C++ and LaTeX code generation with SymPy</title><link>https://afalaize.github.io/posts/170614_ulr_python/</link><dc:creator>Antoine Falaize</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h3 id="C++-and-LaTeX-code-generation-with-Sympy"&gt;C++ and LaTeX code generation with Sympy&lt;a class="anchor-link" href="https://afalaize.github.io/posts/170614_ulr_python/#C++-and-LaTeX-code-generation-with-Sympy"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Antoine Falaize&lt;/strong&gt;, CNRS UMR 7356 LaSIE, Université de la Rochelle, France&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Conférence &lt;em&gt;Python Scientifique&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Université de La Rochelle - 14 Juin 2017&lt;/em&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h5 id="What-is-SymPy"&gt;What is SymPy&lt;a class="anchor-link" href="https://afalaize.github.io/posts/170614_ulr_python/#What-is-SymPy"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;p&gt;From the &lt;a href="http://www.sympy.org/fr/"&gt;web site&lt;/a&gt;: &lt;em&gt;SymPy is a Python library for symbolic mathematics. It aims to become a full-featured computer algebra system (CAS) while keeping the code as simple as possible in order to be comprehensible and easily extensible. SymPy is written entirely in Python. &lt;/em&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h5 id="Why-use-SymPy"&gt;Why use SymPy&lt;a class="anchor-link" href="https://afalaize.github.io/posts/170614_ulr_python/#Why-use-SymPy"&gt;¶&lt;/a&gt;&lt;/h5&gt;&lt;ul&gt;
&lt;li&gt;Symbolic derivatives (optimization, nonlinear solvers, ...)&lt;/li&gt;
&lt;li&gt;C++ Code generation (performance, portability, ...)&lt;/li&gt;
&lt;li&gt;LaTeX Code generation (documentation, publication, ...)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href="https://afalaize.github.io/posts/170614_ulr_python/"&gt;Read more…&lt;/a&gt; (8 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Computer Tools</category><category>mathjax</category><category>Python</category><category>Seminar</category><guid>https://afalaize.github.io/posts/170614_ulr_python/</guid><pubDate>Wed, 14 Jun 2017 21:37:20 GMT</pubDate></item><item><title>Comparison of numerical methods</title><link>https://afalaize.github.io/posts/comparisonnumschemes/</link><dc:creator>Antoine Falaize</dc:creator><description>&lt;div tabindex="-1" id="notebook" class="border-box-sizing"&gt;
    &lt;div class="container" id="notebook-container"&gt;

&lt;div class="cell border-box-sizing text_cell rendered"&gt;
&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;
&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;This post is devoted to te comparison of simulation results obtained by the following numerical methods:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Explicit and implicit Euler methods,&lt;/li&gt;
&lt;li&gt;Trapezoidal rule,&lt;/li&gt;
&lt;li&gt;Midpoint rule,&lt;/li&gt;
&lt;li&gt;Discrete gradient method combined with PHS structure.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Results are given in &lt;em&gt;Python&lt;/em&gt; code.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://afalaize.github.io/posts/comparisonnumschemes/"&gt;Read more…&lt;/a&gt; (12 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>mathjax</category><category>Numerical Method</category><category>Simulation</category><guid>https://afalaize.github.io/posts/comparisonnumschemes/</guid><pubDate>Tue, 11 Oct 2016 12:43:30 GMT</pubDate></item><item><title>Analog audio circuits</title><link>https://afalaize.github.io/posts/analogcircuits/</link><dc:creator>Antoine Falaize</dc:creator><description>&lt;div&gt;&lt;p&gt;This is a companion page for the article &lt;strong&gt;Passive guaranteed simulation of analog audio circuits: A port-Hamiltonian approach&lt;/strong&gt;
submitted in may 2016 to the special issue &lt;em&gt;Audio Signal Processing&lt;/em&gt; of journal &lt;a class="reference external" href="http://www.mdpi.com/journal/applsci"&gt;Applied Science&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://afalaize.github.io/posts/analogcircuits/"&gt; click to acces simulated sounds …&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Electronic</category><category>Graphs</category><category>mathjax</category><category>PHS</category><category>PyPHS</category><guid>https://afalaize.github.io/posts/analogcircuits/</guid><pubDate>Mon, 20 Jun 2016 23:06:53 GMT</pubDate></item><item><title>Simulation of the Fender Rhodes</title><link>https://afalaize.github.io/posts/rhodes/</link><dc:creator>Antoine Falaize</dc:creator><description>&lt;div&gt;&lt;p&gt;This is a companion page for the article &lt;strong&gt;Passive simulation of the nonlinear port-Hamiltonian modeling of a Rhodes Piano&lt;/strong&gt;
submitted to the &lt;em&gt;Journal of Sound and Vibration&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://afalaize.github.io/posts/rhodes/"&gt; See more …&lt;/a&gt; (10 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Audio</category><category>Fender Rhodes</category><category>mathjax</category><category>PHS</category><category>Virtual Instrument</category><guid>https://afalaize.github.io/posts/rhodes/</guid><pubDate>Tue, 13 Oct 2015 10:38:29 GMT</pubDate></item></channel></rss>